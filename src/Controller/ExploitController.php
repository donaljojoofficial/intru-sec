<?php

namespace App\Controller;

use App\Entity\Exploit;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class ExploitController extends AbstractController
{
    #[Route('/', name: 'homepage', methods: ['GET'])]
public function index(): Response
{
    return $this->render('exploit/detect.html.twig');
}
#[Route('/history', name: 'exploit_history', methods: ['GET'])]
public function history(EntityManagerInterface $em): Response
{
    $exploits = $em->getRepository(Exploit::class)->findAll();
    return $this->render('exploit/history.html.twig', [
        'exploits' => $exploits,
    ]);
}

    #[Route('/detect', name: 'detect_exploit', methods: ['POST'])]
    public function detect(Request $request, EntityManagerInterface $em): Response
    {
        $url = $request->request->get('url');
        $type = $this->simpleDetect($url);

        $exploit = new Exploit();
        $exploit->setUrl($url);
        $exploit->setType($type);
        $exploit->setDetectedAt(new \DateTime());

        $em->persist($exploit);
        $em->flush();

        return $this->json([
            'message' => 'Scanned!',
            'type' => $type,
        ]);
    }

    private function simpleDetect($url): string
    {
        // Very basic detection logic (for illustration)
        $patterns = [
            'SQL Injection' => '/(\%27)|(\')|(\-\-)|(\%23)|(#)/i',
            'XSS'           => '/((<|%3C)script)/i'
        ];

        foreach ($patterns as $type => $pattern) {
            if (preg_match($pattern, $url)) {
                return $type;
            }
        }
        return 'Safe';
    }
}
